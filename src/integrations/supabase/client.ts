
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://udiukyasxnfhemmamkbj.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVkaXVreWFzeG5maGVtbWFta2JqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQxOTE3MjMsImV4cCI6MjA1OTc2NzcyM30.3fph3ltzA_6SfvD6ECLPMBCK03Sf0HHozx_BMPVmNQE";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
    }
  }
);

// Types for our AI prediction related tables
export interface AIPredictionMetrics {
  id: string;
  no_show_accuracy: number;
  duration_accuracy: number;
  reschedule_acceptance: number;
  created_at: string | null;
  updated_at: string | null;
}

export interface AIPrediction {
  id: string;
  type: string;
  prediction: string;
  accuracy: number;
  timestamp: string | null;
  created_at: string | null;
  updated_at: string | null;
}

// Helper function for AI prediction metrics table
export const getAIPredictionMetrics = async (): Promise<AIPredictionMetrics | null> => {
  const { data, error } = await supabase
    .from('ai_prediction_metrics')
    .select('*')
    .single();
  
  if (error) {
    console.error('Error fetching AI metrics:', error);
    return null;
  }
  
  return data as unknown as AIPredictionMetrics;
};

// Helper function for AI predictions table
export const getAIPredictions = async (limit = 10): Promise<AIPrediction[]> => {
  const { data, error } = await supabase
    .from('ai_predictions')
    .select('*')
    .order('created_at', { ascending: false })
    .limit(limit);
  
  if (error) {
    console.error('Error fetching AI predictions:', error);
    return [];
  }
  
  return data as unknown as AIPrediction[];
};
